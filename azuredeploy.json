{
  "$schema": "https://schema.management.azure.com/schemas/2019-04-01/deploymentTemplate.json#",
  "contentVersion": "1.0.0.0",
  "parameters": {
    "FunctionName": {
      "defaultValue": "McAfee_MVISION_ePO",
      "type": "string",
      "metadata": {
        "description": "Specifies the name of the Function App."
      }
    },
	"UserName": {
      "type": "string",      
      "metadata": {
        "description": "Specifies the McAfee MVISION ePO User Name."
      }
    },
    "Password": {      
      "type": "securestring",
      "metadata": {
        "description": "Specifies McAfee MVISION ePO User Password."
      }
    },
    "WorkspaceId": {
      "type": "string",      
      "metadata": {
        "description": "Specifies the Log Analytics Workspace Id."
      }
    },
    "WorkspaceKey": {
      "type": "securestring",      
      "metadata": {
        "description": "Specifies the Log Analytics Workspace Key."
      }
    },
	"MvisionTokenUrl": {
      "type": "string",      
	  "defaultValue": "https://iam.mcafee-cloud.com/iam/v1.0/token",
      "metadata": {
        "description": "Specifies the McAfee MVISION Token url."
      }
    },
	"MvisionEventsUrl": {
      "type": "string",   
	  "defaultValue": "https://arevents.mvision.mcafee.com",
      "metadata": {
        "description": "Specifies the McAfee MVISION Events url."
      }
    },
	"MvisionClientId": {
      "type": "string",   	  
      "metadata": {
        "description": "Login to the MVISION EPO console and open a new tab, go to https://auth.ui.mcafee.com/support.html to retrieve your client_id"
      }
    },
	"MvisionScope": {
      "type": "string",   
	  "defaultValue": "epo.evt.r",
      "metadata": {
        "description": "Specifies the McAfee MVISION Scope."
      }
    },
	"MvisionEventsType": {
      "type": "string",   
	  "defaultValue": "threats",
      "metadata": {
        "description": "Specifies the McAfee MVISION Events Type - threats, incidents (dlp), all."
      }
    }	
  },
  "variables": {
    "FunctionName": "[concat(toLower(parameters('FunctionName')), uniqueString(resourceGroup().id))]",
	"StorageAccountName":"[concat(substring(variables('FunctionName'), 0, 20), 'sa')]",    
	"KeyVaultName": "[concat(substring(variables('FunctionName'), 0, 20), 'kv')]",    
    "MvisionPassword": "MvisionPassword",    
    "LogAnalyticsWorkspaceKey": "LogAnalyticsWorkspaceKey",    
	"StorageSuffix":"[environment().suffixes.storage]",
    "LogAnaltyicsUri":"[replace(environment().portal, 'https://portal', concat('https://', toLower(parameters('WorkspaceId')), '.ods.opinsights'))]"
  },
  "resources": [
		{
			"type": "Microsoft.Insights/components",
			"apiVersion": "2015-05-01",
			"name": "[variables('FunctionName')]",
			"location": "[resourceGroup().location]",
			"kind": "web",
			"properties": {
				"Application_Type": "web",
				"ApplicationId": "[variables('FunctionName')]"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts",
			"apiVersion": "2019-06-01",
			"name": "[variables('StorageAccountName')]",
			"location": "[resourceGroup().location]",
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"kind": "StorageV2",
			"properties": {
				"networkAcls": {
					"bypass": "AzureServices",
					"virtualNetworkRules": [],
					"ipRules": [],
					"defaultAction": "Allow"
				},
				"supportsHttpsTrafficOnly": true,
				"encryption": {
					"services": {
						"file": {
							"keyType": "Account",
							"enabled": true
						},
						"blob": {
							"keyType": "Account",
							"enabled": true
						}
					},
					"keySource": "Microsoft.Storage"
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"cors": {
					"corsRules": []
				},
				"deleteRetentionPolicy": {
					"enabled": false
				}
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/fileServices",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"sku": {
				"name": "Standard_LRS",
				"tier": "Standard"
			},
			"properties": {
				"cors": {
					"corsRules": []
				}
			}
		},
		{
			"type": "Microsoft.Web/sites",
			"apiVersion": "2018-11-01",
			"name": "[variables('FunctionName')]",
			"location": "[resourceGroup().location]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]",
				"[resourceId('Microsoft.Insights/components', variables('FunctionName'))]"
			],
			"kind": "functionapp,linux",
			"identity": {
				"type": "SystemAssigned"
			},
			"properties": {
				"name": "[variables('FunctionName')]",
				"httpsOnly": true,
				"clientAffinityEnabled": true,
				"alwaysOn": true,
				"reserved": true
			},            
			"resources": [
				{
					"apiVersion": "2018-11-01",
					"type": "config",
					"name": "appsettings",
					"dependsOn": [
						"[concat('Microsoft.Web/sites/', variables('FunctionName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]",
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('MvisionPassword'))]",            
						"[resourceId('Microsoft.KeyVault/vaults/secrets', variables('KeyVaultName'), variables('LogAnalyticsWorkspaceKey'))]"
					],
					"properties": {
						"FUNCTIONS_EXTENSION_VERSION": "~3",
						"FUNCTIONS_WORKER_RUNTIME": "python",
						"APPINSIGHTS_INSTRUMENTATIONKEY": "[reference(resourceId('Microsoft.insights/components', variables('FunctionName')), '2015-05-01').InstrumentationKey]",
						"APPLICATIONINSIGHTS_CONNECTION_STRING": "[reference(resourceId('microsoft.insights/components', variables('FunctionName')), '2015-05-01').ConnectionString]",                        
						"AzureWebJobsStorage": "[concat('DefaultEndpointsProtocol=https;AccountName=', toLower(variables('StorageAccountName')),';AccountKey=',listKeys(resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName')), '2019-06-01').keys[0].value, ';EndpointSuffix=',toLower(variables('StorageSuffix')))]",
						"WorkspaceID": "[parameters('WorkspaceID')]",
						"WorkspaceKey": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('LogAnalyticsWorkspaceKey')).secretUriWithVersion, ')')]",                        
						"MVision_ePO_UserName": "[parameters('UserName')]",
						"MVision_ePO_Password": "[concat('@Microsoft.KeyVault(SecretUri=', reference(variables('MvisionPassword')).secretUriWithVersion, ')')]",
						"MVision_ePO_Token_Url": "[parameters('MvisionTokenUrl')]",
						"MVision_ePO_Events_Url": "[parameters('MvisionEventsUrl')]",
						"MVision_ClientID": "[parameters('MvisionClientId')]",
						"MVision_Scope": "[parameters('MvisionScope')]",
						"MVision_EventType": "[parameters('MvisionEventsType')]",
						"LogAnalyticsCustomLogName":"McAfee_MVISION_ePO",
						"Schedule":"0 */10 * * * *",
						"MVision_Events_Last_X_Mins":"10",			
						"MVision_EventsLimit": "1000",
						"LAURI": "[variables('LogAnaltyicsUri')]",											 
						"WEBSITE_RUN_FROM_PACKAGE": "https://github.com/sreedharande/Azure-Sentinel-McAfee-MVision-ePO-Cloud/blob/main/AzFunction-McAfee-MVISION-ePO.zip?raw=true"
					}
				}
			]
		},
		{
		  "type": "Microsoft.KeyVault/vaults",
		  "apiVersion": "2016-10-01",
		  "name": "[variables('KeyVaultName')]",
		  "location": "[resourceGroup().location]",
		  "dependsOn": [
			"[resourceId('Microsoft.Web/sites', variables('FunctionName'))]"
		  ],
		  "properties": {
			"sku": {
			  "family": "A",
			  "name": "Standard"
			},
			"tenantId": "[subscription().tenantId]",
			"accessPolicies": [
			  {
				"tenantId": "[subscription().tenantId]",
				"objectId": "[reference(resourceId('Microsoft.Web/sites', variables('FunctionName')),'2019-08-01', 'full').identity.principalId]",
				"permissions": {
				  "secrets": [ "get",
							   "list"
							]
				}
			  }
			],
			"enabledForDeployment": false,
			"enabledForDiskEncryption": false,
			"enabledForTemplateDeployment": true,
			"enableSoftDelete": true
		  },
		  "resources": [			
			{
			  "type": "secrets",
			  "apiVersion": "2016-10-01",
			  "name": "[variables('MvisionPassword')]",
			  "dependsOn": [
				"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
			  ],
			  "properties": {
				"value": "[parameters('MvisionPassword')]",
				"contentType": "string",
				"attributes": {
				  "enabled": true
				}
			  }
			}, 
			{
			  "type": "secrets",
			  "apiVersion": "2016-10-01",
			  "name": "[variables('LogAnalyticsWorkspaceKey')]",
			  "dependsOn": [
				"[resourceId('Microsoft.KeyVault/vaults/', variables('KeyVaultName'))]"
			  ],
			  "properties": {
				"value": "[parameters('WorkspaceKey')]",
				"contentType": "string",
				"attributes": {
				  "enabled": true
				}
			  }
			}
		  ]
		},        
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-hosts')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"publicAccess": "None"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/blobServices/containers",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/azure-webjobs-secrets')]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/blobServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"publicAccess": "None"
			}
		},
		{
			"type": "Microsoft.Storage/storageAccounts/fileServices/shares",
			"apiVersion": "2019-06-01",
			"name": "[concat(variables('StorageAccountName'), '/default/', variables('StorageAccountName'))]",
			"dependsOn": [
				"[resourceId('Microsoft.Storage/storageAccounts/fileServices', variables('StorageAccountName'), 'default')]",
				"[resourceId('Microsoft.Storage/storageAccounts', variables('StorageAccountName'))]"
			],
			"properties": {
				"shareQuota": 5120
			}
		}
	]
}